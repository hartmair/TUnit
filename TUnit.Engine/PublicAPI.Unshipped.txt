override TUnit.Engine.Exceptions.TestFailedException.StackTrace.get -> string
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this System.Exception exception) -> TUnit.Engine.Json.ExceptionJson
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this TUnit.Core.AssemblyHookContext context) -> TUnit.Engine.Json.TestAssemblyJson
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this TUnit.Core.ClassHookContext context) -> TUnit.Engine.Json.TestClassJson
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this TUnit.Core.TestContext context) -> TUnit.Engine.Json.TestJson
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this TUnit.Core.TestResult result) -> TUnit.Engine.Json.TestResultJson
static TUnit.Engine.Extensions.JsonExtensions.ToJsonModel(this TUnit.Core.TestSessionContext context) -> TUnit.Engine.Json.TestSessionJson
static TUnit.Engine.Framework.TestingPlatformBuilderHook.AddExtensions(Microsoft.Testing.Platform.Builder.ITestApplicationBuilder testApplicationBuilder, string[] _) -> void
static TUnit.Engine.Services.FilterParser.StringifyFilter(Microsoft.Testing.Platform.Requests.ITestExecutionFilter filter) -> string
static TUnit.Engine.Services.TUnitRunner.RunTests(params string[] args) -> System.Threading.Tasks.Task<int>
TUnit.Engine.Exceptions.TestFailedException
TUnit.Engine.Exceptions.TestFailedException.TestFailedException(System.Exception exception) -> void
TUnit.Engine.Extensions.JsonExtensions
TUnit.Engine.Framework.IFilterReceiver
TUnit.Engine.Framework.IFilterReceiver.Filter.set -> void
TUnit.Engine.Framework.TestingPlatformBuilderHook
TUnit.Engine.Json.ExceptionJson
TUnit.Engine.Json.ExceptionJson.InnerException.get -> TUnit.Engine.Json.ExceptionJson
TUnit.Engine.Json.ExceptionJson.InnerException.init -> void
TUnit.Engine.Json.ExceptionJson.Message.get -> string
TUnit.Engine.Json.ExceptionJson.Message.init -> void
TUnit.Engine.Json.ExceptionJson.Stacktrace.get -> string
TUnit.Engine.Json.ExceptionJson.Stacktrace.init -> void
TUnit.Engine.Json.ExceptionJson.Type.get -> string
TUnit.Engine.Json.ExceptionJson.Type.init -> void
TUnit.Engine.Json.TestAssemblyJson
TUnit.Engine.Json.TestAssemblyJson.AssemblyName.get -> string
TUnit.Engine.Json.TestAssemblyJson.AssemblyName.init -> void
TUnit.Engine.Json.TestAssemblyJson.Classes.get -> TUnit.Engine.Json.TestClassJson[]
TUnit.Engine.Json.TestAssemblyJson.Classes.init -> void
TUnit.Engine.Json.TestClassJson
TUnit.Engine.Json.TestClassJson.Tests.get -> TUnit.Engine.Json.TestJson[]
TUnit.Engine.Json.TestClassJson.Tests.init -> void
TUnit.Engine.Json.TestClassJson.Type.get -> string
TUnit.Engine.Json.TestClassJson.Type.init -> void
TUnit.Engine.Json.TestJson
TUnit.Engine.Json.TestJson.Categories.get -> System.Collections.Generic.IReadOnlyList<string>
TUnit.Engine.Json.TestJson.Categories.init -> void
TUnit.Engine.Json.TestJson.ClassType.get -> string
TUnit.Engine.Json.TestJson.ClassType.init -> void
TUnit.Engine.Json.TestJson.CustomProperties.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
TUnit.Engine.Json.TestJson.CustomProperties.init -> void
TUnit.Engine.Json.TestJson.DisplayName.get -> string
TUnit.Engine.Json.TestJson.DisplayName.set -> void
TUnit.Engine.Json.TestJson.ObjectBag.get -> System.Collections.Generic.Dictionary<string, object>
TUnit.Engine.Json.TestJson.ObjectBag.init -> void
TUnit.Engine.Json.TestJson.Result.get -> TUnit.Engine.Json.TestResultJson
TUnit.Engine.Json.TestJson.Result.set -> void
TUnit.Engine.Json.TestJson.RetryLimit.get -> int
TUnit.Engine.Json.TestJson.RetryLimit.init -> void
TUnit.Engine.Json.TestJson.ReturnType.get -> string
TUnit.Engine.Json.TestJson.ReturnType.init -> void
TUnit.Engine.Json.TestJson.TestClassArguments.get -> object[]
TUnit.Engine.Json.TestJson.TestClassArguments.init -> void
TUnit.Engine.Json.TestJson.TestClassParameterTypes.get -> string[]
TUnit.Engine.Json.TestJson.TestClassParameterTypes.init -> void
TUnit.Engine.Json.TestJson.TestFilePath.get -> string
TUnit.Engine.Json.TestJson.TestFilePath.init -> void
TUnit.Engine.Json.TestJson.TestId.get -> string
TUnit.Engine.Json.TestJson.TestId.init -> void
TUnit.Engine.Json.TestJson.TestLineNumber.get -> int
TUnit.Engine.Json.TestJson.TestLineNumber.init -> void
TUnit.Engine.Json.TestJson.TestMethodArguments.get -> object[]
TUnit.Engine.Json.TestJson.TestMethodArguments.init -> void
TUnit.Engine.Json.TestJson.TestMethodParameterTypes.get -> string[]
TUnit.Engine.Json.TestJson.TestMethodParameterTypes.init -> void
TUnit.Engine.Json.TestJson.TestName.get -> string
TUnit.Engine.Json.TestJson.TestName.init -> void
TUnit.Engine.Json.TestJson.Timeout.get -> System.TimeSpan?
TUnit.Engine.Json.TestJson.Timeout.init -> void
TUnit.Engine.Json.TestResultJson
TUnit.Engine.Json.TestResultJson.ComputerName.get -> string
TUnit.Engine.Json.TestResultJson.ComputerName.init -> void
TUnit.Engine.Json.TestResultJson.Duration.get -> System.TimeSpan?
TUnit.Engine.Json.TestResultJson.Duration.init -> void
TUnit.Engine.Json.TestResultJson.End.get -> System.DateTimeOffset?
TUnit.Engine.Json.TestResultJson.End.init -> void
TUnit.Engine.Json.TestResultJson.Exception.get -> TUnit.Engine.Json.ExceptionJson
TUnit.Engine.Json.TestResultJson.Exception.init -> void
TUnit.Engine.Json.TestResultJson.Output.get -> string
TUnit.Engine.Json.TestResultJson.Output.init -> void
TUnit.Engine.Json.TestResultJson.Start.get -> System.DateTimeOffset?
TUnit.Engine.Json.TestResultJson.Start.init -> void
TUnit.Engine.Json.TestResultJson.Status.get -> TUnit.Core.Enums.Status
TUnit.Engine.Json.TestResultJson.Status.init -> void
TUnit.Engine.Json.TestSessionJson
TUnit.Engine.Json.TestSessionJson.Assemblies.get -> TUnit.Engine.Json.TestAssemblyJson[]
TUnit.Engine.Json.TestSessionJson.Assemblies.init -> void
TUnit.Engine.PriorityQueue<TElement, TPriority>
TUnit.Engine.PriorityQueue<TElement, TPriority>.Count.get -> int
TUnit.Engine.PriorityQueue<TElement, TPriority>.Dequeue() -> TElement
TUnit.Engine.PriorityQueue<TElement, TPriority>.Enqueue(TElement value, TPriority priority) -> void
TUnit.Engine.PriorityQueue<TElement, TPriority>.Peek() -> TElement
TUnit.Engine.PriorityQueue<TElement, TPriority>.PriorityQueue() -> void
TUnit.Engine.PriorityQueue<TElement, TPriority>.TryDequeue(out TElement value, out TPriority priority) -> bool
TUnit.Engine.Reporters.GitHubReporter
TUnit.Engine.Reporters.GitHubReporter.AfterRunAsync(int exitCode, System.Threading.CancellationToken cancellation) -> System.Threading.Tasks.Task
TUnit.Engine.Reporters.GitHubReporter.BeforeRunAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
TUnit.Engine.Reporters.GitHubReporter.ConsumeAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer dataProducer, Microsoft.Testing.Platform.Extensions.Messages.IData value, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
TUnit.Engine.Reporters.GitHubReporter.DataTypesConsumed.get -> System.Type[]
TUnit.Engine.Reporters.GitHubReporter.Description.get -> string
TUnit.Engine.Reporters.GitHubReporter.DisplayName.get -> string
TUnit.Engine.Reporters.GitHubReporter.Filter.get -> string
TUnit.Engine.Reporters.GitHubReporter.Filter.set -> void
TUnit.Engine.Reporters.GitHubReporter.GitHubReporter(Microsoft.Testing.Platform.Extensions.IExtension extension) -> void
TUnit.Engine.Reporters.GitHubReporter.IsEnabledAsync() -> System.Threading.Tasks.Task<bool>
TUnit.Engine.Reporters.GitHubReporter.Uid.get -> string
TUnit.Engine.Reporters.GitHubReporter.Version.get -> string
TUnit.Engine.Services.FilterParser
TUnit.Engine.Services.FilterParser.FilterParser() -> void
TUnit.Engine.Services.FilterParser.GetTestFilter(Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext context) -> string
TUnit.Engine.Services.HookMessagePublisher
TUnit.Engine.Services.HookMessagePublisher.DataTypesProduced.get -> System.Type[]
TUnit.Engine.Services.HookMessagePublisher.Description.get -> string
TUnit.Engine.Services.HookMessagePublisher.Discover(string sessionId, string displayName, TUnit.Core.Hooks.StaticHookMethod hookMethod) -> System.Threading.Tasks.Task
TUnit.Engine.Services.HookMessagePublisher.DisplayName.get -> string
TUnit.Engine.Services.HookMessagePublisher.HookMessagePublisher(Microsoft.Testing.Platform.Extensions.IExtension extension, Microsoft.Testing.Platform.Messages.IMessageBus messageBus) -> void
TUnit.Engine.Services.HookMessagePublisher.IsEnabledAsync() -> System.Threading.Tasks.Task<bool>
TUnit.Engine.Services.HookMessagePublisher.Push(string sessionId, string displayName, TUnit.Core.Hooks.StaticHookMethod hookMethod, System.Func<System.Threading.Tasks.Task> func) -> System.Threading.Tasks.Task
TUnit.Engine.Services.HookMessagePublisher.Uid.get -> string
TUnit.Engine.Services.HookMessagePublisher.Version.get -> string
TUnit.Engine.Services.LogLevelProvider
TUnit.Engine.Services.LogLevelProvider.LogLevel.get -> TUnit.Core.Enums.LogLevel
TUnit.Engine.Services.LogLevelProvider.LogLevelProvider(Microsoft.Testing.Platform.CommandLine.ICommandLineOptions commandLineOptions) -> void
TUnit.Engine.Services.TUnitRunner
TUnit.Engine.TUnitMessageBus
TUnit.Engine.TUnitMessageBus.Cancelled(TUnit.Core.TestContext testContext) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.DataTypesProduced.get -> System.Type[]
TUnit.Engine.TUnitMessageBus.Description.get -> string
TUnit.Engine.TUnitMessageBus.Discovered(TUnit.Core.TestContext testContext) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.DisplayName.get -> string
TUnit.Engine.TUnitMessageBus.Failed(TUnit.Core.TestContext testContext, System.Exception exception, System.DateTimeOffset start) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.InProgress(TUnit.Core.TestContext testContext) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.IsEnabledAsync() -> System.Threading.Tasks.Task<bool>
TUnit.Engine.TUnitMessageBus.Passed(TUnit.Core.TestContext testContext, System.DateTimeOffset start) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.SessionArtifact(TUnit.Core.Artifact artifact) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.Skipped(TUnit.Core.TestContext testContext, string reason) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.TestArtifact(TUnit.Core.TestContext testContext, TUnit.Core.Artifact artifact) -> System.Threading.Tasks.ValueTask
TUnit.Engine.TUnitMessageBus.TUnitMessageBus(Microsoft.Testing.Platform.Extensions.IExtension extension, Microsoft.Testing.Platform.CommandLine.ICommandLineOptions commandLineOptions, Microsoft.Testing.Platform.Extensions.TestFramework.ExecuteRequestContext context) -> void
TUnit.Engine.TUnitMessageBus.Uid.get -> string
TUnit.Engine.TUnitMessageBus.Version.get -> string